# FedEx Ground holiday definitions for the Ruby Holiday gem.
#
#
# Updated: 2016-08-15.
# Source:  http://www.fedex.com/us/services/pdf/HolidaySchedule.pdf
---
months:
  0:
  - name: Easter
    regions: [fedex_ground]
    function: easter(year)
  1:
  - name: New Year's Day
    regions: [fedex_ground]
    mday: 1
    observed: to_weekday_if_weekend(date)
  - name: Day After New Year's Day
    regions: [fedex_ground]
    mday: 2
  5:
  - name: Memorial Day
    week: -1
    regions: [fedex_ground]
    wday: 1
  7:
  - name: Day Before Independence Day
    regions: [fedex_ground]
    mday: 3
  - name: Independence Day
    regions: [fedex_ground]
    mday: 4
    observed: to_weekday_if_weekend(date)
  9:
  - name: Saturday Before Labor Day
    regions: [fedex_ground]
    function: saturday_before_labor_day(year)
  - name: Sunday Before Labor Day
    regions: [fedex_ground]
    function: sunday_before_labor_day(year)
  - name: Labor Day
    week: 1
    regions: [fedex_ground]
    wday: 1
  11:
  - name: Thanksgiving
    week: 4
    regions: [fedex_ground]
    wday: 4
  - name: Saturday After Thanksgiving
    function: saturday_after_thanksgiving(year)
    regions: [fedex_ground]
  12:
  - name: Day Before Christmas Eve
    regions: [fedex_ground]
    mday: 23
  - name: Christmas Eve
    regions: [fedex_ground]
    mday: 24
  - name: Christmas Day
    regions: [fedex_ground]
    mday: 25
  - name: Day After Christmas
    regions: [fedex_ground]
    mday: 26
  - name: New Year's Eve
    regions: [fedex_ground]
    mday: 31
methods:
  sunday_before_labor_day:
    arguments: year
    source: |
      Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 9, 1, 1) - 1
  saturday_before_labor_day:
    arguments: year
    source: |
      Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 9, 1, 1) - 2
  saturday_after_thanksgiving:
    arguments: year
    source: |
      Holidays::Factory::DateCalculator.day_of_month_calculator.call(year, 11, 4, 4) + 2
tests: |
    {Date.civil(2015,1,1) => 'New Year\'s Day',
     Date.civil(2015,1,2) => 'Day After New Year\'s Day',
     Date.civil(2016,3,27) => 'Easter',
     Date.civil(2015,5,25) => 'Memorial Day',
     Date.civil(2015,7,3) => 'Day Before Independence Day',
     Date.civil(2015,7,4) => 'Independence Day',
     Date.civil(2015,9,5) => 'Saturday Before Labor Day',
     Date.civil(2015,9,6) => 'Sunday Before Labor Day',
     Date.civil(2015,9,7) => 'Labor Day',
     Date.civil(2016,11,24) => 'Thanksgiving',
     Date.civil(2016,11,26) => 'Saturday After Thanksgiving',
     Date.civil(2015,12,23) => 'Day Before Christmas Eve',
     Date.civil(2015,12,24) => 'Christmas Eve',
     Date.civil(2015,12,25) => 'Christmas Day',
     Date.civil(2015,12,26) => 'Day After Christmas',
     Date.civil(2015,12,31) => 'New Year\'s Eve',}.each do |date, name|
      assert_equal name, (Holidays.on(date, :ups)[0] || {})[:name]
    end
